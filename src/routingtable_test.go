package dht

import (
	"fmt"
	"testing"
)

func TestTableInsert(t *testing.T) {
	id := NewBitMapfromBytes([]byte{0x55, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 49, 50, 51, 52, 53, 54})
	ip := "localhost"
	port := 5433
	selfNode := Node{id, ip, port}
	table := NewTable(&TableNode{}, selfNode)
	nodes := []Node{
		Node{NewBitMapfromBytes([]byte{89, 161, 15, 185, 131, 115, 212, 23, 177, 175, 67, 151, 220, 192, 34, 179, 3, 155, 108, 33}), "190.142.196.109", 8916},
		Node{NewBitMapfromBytes([]byte{125, 141, 36, 57, 103, 63, 83, 25, 41, 205, 92, 113, 112, 162, 225, 238, 226, 59, 201, 46}), "120.155.34.240", 22781},
		Node{NewBitMapfromBytes([]byte{46, 137, 96, 149, 122, 46, 26, 174, 156, 194, 181, 28, 212, 210, 151, 127, 210, 162, 4, 215}), "116.48.63.27", 11189},
		Node{NewBitMapfromBytes([]byte{53, 73, 86, 30, 77, 37, 44, 202, 82, 120, 97, 154, 57, 24, 94, 158, 5, 93, 85, 102}), "176.215.33.155", 11609},
		Node{NewBitMapfromBytes([]byte{234, 207, 217, 156, 44, 182, 204, 181, 51, 133, 236, 1, 174, 169, 224, 231, 52, 105, 255, 184}), "178.213.210.158", 13310},
		Node{NewBitMapfromBytes([]byte{62, 195, 230, 21, 141, 205, 224, 90, 65, 47, 171, 63, 230, 116, 46, 233, 74, 177, 184, 131}), "85.74.56.95", 41000},
		Node{NewBitMapfromBytes([]byte{175, 53, 50, 96, 97, 208, 241, 76, 170, 164, 49, 80, 111, 72, 25, 225, 80, 119, 16, 116}), "78.51.84.158", 11609},
		Node{NewBitMapfromBytes([]byte{79, 27, 197, 1, 1, 171, 166, 66, 85, 41, 33, 217, 42, 50, 36, 44, 242, 190, 243, 11}), "201.108.133.28", 40489},
		Node{NewBitMapfromBytes([]byte{57, 251, 65, 245, 158, 35, 72, 46, 245, 16, 214, 23, 197, 7, 129, 18, 51, 40, 181, 254}), "81.131.107.248", 26085},
		Node{NewBitMapfromBytes([]byte{209, 215, 72, 136, 13, 10, 0, 113, 187, 141, 29, 227, 98, 44, 73, 48, 98, 134, 4, 93}), "2.51.78.228", 22222},
		Node{NewBitMapfromBytes([]byte{58, 172, 164, 128, 73, 157, 248, 2, 213, 124, 2, 182, 122, 71, 92, 171, 0, 119, 100, 13}), "24.140.225.52", 62348},
		Node{NewBitMapfromBytes([]byte{255, 184, 21, 196, 188, 230, 42, 183, 133, 29, 128, 100, 35, 12, 244, 138, 202, 81, 90, 227}), "41.150.223.73", 26085},
		Node{NewBitMapfromBytes([]byte{36, 35, 101, 109, 217, 165, 221, 57, 99, 241, 93, 5, 78, 35, 235, 0, 253, 96, 46, 176}), "46.152.108.102", 34373},
		Node{NewBitMapfromBytes([]byte{129, 99, 249, 115, 226, 175, 195, 123, 156, 145, 63, 81, 172, 175, 2, 179, 95, 50, 211, 12}), "2.184.103.105", 20284},
		Node{NewBitMapfromBytes([]byte{107, 192, 166, 38, 232, 222, 190, 153, 198, 253, 106, 114, 177, 96, 31, 60, 59, 138, 241, 199}), "91.147.220.38", 38918},
		Node{NewBitMapfromBytes([]byte{15, 50, 187, 71, 230, 192, 168, 240, 209, 54, 214, 200, 175, 31, 156, 221, 243, 155, 158, 17}), "98.213.98.253", 50321},
	}

	for _, node := range nodes {
		table.Insert(node)
	}
	fmt.Println(selfNode.id.String())
	println("=====")
	table.Print()
}

func printNodes(nodes []Node) {
}
